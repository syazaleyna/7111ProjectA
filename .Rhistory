scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
fsodafiltratemin2019B1 <- abs(fft(y1))
freqfsodafiltratemin2019B1 <- 1/(filtersodafiltratemin2019B1$time/24)
fouriersodafiltratemin2019B1 <- cbind(fourier=fsodafiltratemin2019B1,
freq=freqfsodafiltratemin2019B1,
filtersodafiltratemin2019B1)
fouriersodafiltratemin2019B1 <- fouriersodafiltratemin2019B1[2:(length(fouriersodafiltratemin2019B1$fourier)/2),]
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_col() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
#low filter
lowbf <- butter(8, 0.5, type = "low")
y1 <- filtfilt(lowbf, fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1 <- data.frame(time = fouriersodafiltratemin2019B1$freq,
filter = y1,
nofilter = fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1fin <- lowpasssodafiltratemin2019B1 %>%
gather(type, level, filter:nofilter)
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_line() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
filtersodafiltratemin2019B1 <- na.omit(filtersodafiltratemin2019B1)
fsodafiltratemin2019B1 <- abs(fft(filtersodafiltratemin2019B1$data))
freqfsodafiltratemin2019B1 <- 1/(filtersodafiltratemin2019B1$time/24)
fouriersodafiltratemin2019B1 <- cbind(fourier=fsodafiltratemin2019B1,
freq=freqfsodafiltratemin2019B1,
filtersodafiltratemin2019B1)
fouriersodafiltratemin2019B1 <- fouriersodafiltratemin2019B1[2:(1+length(fouriersodafiltratemin2019B1$fourier)/2),]
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_col() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
#low filter
lowbf <- butter(8, 0.5, type = "low")
y1 <- filtfilt(lowbf, fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1 <- data.frame(time = fouriersodafiltratemin2019B1$freq,
filter = y1,
nofilter = fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1fin <- lowpasssodafiltratemin2019B1 %>%
gather(type, level, filter:nofilter)
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_line() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
fsodafiltratemin2019B1 <- abs(fft(y1))
freqfsodafiltratemin2019B1 <- 1/(filtersodafiltratemin2019B1$time/24)
fouriersodafiltratemin2019B1 <- cbind(fourier=fsodafiltratemin2019B1,
freq=freqfsodafiltratemin2019B1,
filtersodafiltratemin2019B1)
fouriersodafiltratemin2019B1 <- fouriersodafiltratemin2019B1[2:(length(fouriersodafiltratemin2019B1$fourier)/2),]
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_col() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
#rosner test
rtestsodafiltratemin2019B1 <- rosnerTest(sodafiltratemin2019B1$data, k=100)
if (rtestsodafiltratemin2019B1$n.outliers > 0){
finalrtestsodafiltratemin2019B1 <- rosnerTest(sodafiltratemin2019B1$data, k=rtestsodafiltratemin2019B1$n.outliers)
filtersodafiltratemin2019B1 <- sodafiltratemin2019B1[-c(finalrtestsodafiltratemin2019B1$all.stats$Obs.Num),]
ggplot(filtersodafiltratemin2019B1, aes(x=time, y=data, color = type)) + geom_line(alpha = 0.8) +
geom_smooth(method = lm) + xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("2019 Filter 1B Filtrate Soda Conc. (filtered)")
}
filtersodafiltratemin2019B1 <- na.omit(filtersodafiltratemin2019B1)
fsodafiltratemin2019B1 <- abs(fft(filtersodafiltratemin2019B1$data))
freqfsodafiltratemin2019B1 <- 1/(filtersodafiltratemin2019B1$time/24)
fouriersodafiltratemin2019B1 <- cbind(fourier=fsodafiltratemin2019B1,
freq=freqfsodafiltratemin2019B1,
filtersodafiltratemin2019B1)
fouriersodafiltratemin2019B1 <- fouriersodafiltratemin2019B1[2:(1+length(fouriersodafiltratemin2019B1$fourier)/2),]
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_col() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
#low filter
lowbf <- butter(8, 0.5, type = "low")
y1 <- filtfilt(lowbf, fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1 <- data.frame(time = fouriersodafiltratemin2019B1$freq,
filter = y1,
nofilter = fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1fin <- lowpasssodafiltratemin2019B1 %>%
gather(type, level, filter:nofilter)
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_line() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
fsodafiltratemin2019B1 <- abs(fft(y1))
freqfsodafiltratemin2019B1 <- fouriersodafiltratemin2019B1$freq
fsodafiltratemin2019B1 <- abs(fft(y1))
freqfsodafiltratemin2019B1 <- fouriersodafiltratemin2019B1$freq
fouriersodafiltratemin2019B1 <- cbind(fourier=fsodafiltratemin2019B1,
freq=freqfsodafiltratemin2019B1,
fouriersodafiltratemin2019B1)
fouriersodafiltratemin2019B1 <- fouriersodafiltratemin2019B1[2:(length(fouriersodafiltratemin2019B1$fourier)/2),]
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_col() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_col() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
fsodafiltratemin2019B1 <- abs(fft(y1))
freqfsodafiltratemin2019B1 <- fouriersodafiltratemin2019B1$freq
fouriersodafiltratemin2019B1 <- cbind(fourier=fsodafiltratemin2019B1,
freq=freqfsodafiltratemin2019B1,
fouriersodafiltratemin2019B1)
fouriersodafiltratemin2019B1 <- cbind(fourier=fsodafiltratemin2019B1,
freq=freqfsodafiltratemin2019B1)
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_line() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
fft(lowpasssodafiltratemin2019B1fin)
lowpasssodafiltratemin2019B1 <- data.frame(time = fouriersodafiltratemin2019B1$freq,
filter = y1,
nofilter = fouriersodafiltratemin2019B1$data)
filtersodafiltratemin2019B1 <- na.omit(filtersodafiltratemin2019B1)
fsodafiltratemin2019B1 <- abs(fft(filtersodafiltratemin2019B1$data))
freqfsodafiltratemin2019B1 <- 1/(filtersodafiltratemin2019B1$time/24)
fouriersodafiltratemin2019B1 <- cbind(fourier=fsodafiltratemin2019B1,
freq=freqfsodafiltratemin2019B1,
filtersodafiltratemin2019B1)
fouriersodafiltratemin2019B1 <- fouriersodafiltratemin2019B1[2:(1+length(fouriersodafiltratemin2019B1$fourier)/2),]
#low filter
lowbf <- butter(8, 0.5, type = "low")
y1 <- filtfilt(lowbf, fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1 <- data.frame(time = fouriersodafiltratemin2019B1$freq,
filter = y1,
nofilter = fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1fin <- lowpasssodafiltratemin2019B1 %>%
gather(type, level, filter:nofilter)
View(lowpasssodafiltratemin2019B1fin)
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type)) +
geom_line() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_line() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
fft(lowpasssodafiltratemin2019B1fin)
fft(lowpasssodafiltratemin2019B1fin$level)
abs(fft(lowpasssodafiltratemin2019B1fin$level))
plot(abs(fft(lowpasssodafiltratemin2019B1fin$level)))
plot(fsodafiltratemin2019B1)
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_col() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
View(fouriersodafiltratemin2019B1)
fsodafiltratemin2019B1 <- abs(fft(filtersodafiltratemin2019B1$data))
freqfsodafiltratemin2019B1 <- 1/(filtersodafiltratemin2019B1$time/24)
fouriersodafiltratemin2019B1 <- cbind(fourier=fsodafiltratemin2019B1,
freq=freqfsodafiltratemin2019B1,
filtersodafiltratemin2019B1)
plot(fouriersodafiltratemin2019B1$fourier)
plot(fouriersodafiltratemin2019B1$fourier[2:(length(fouriersodafiltratemin2019B1$fourier)/2),])
plot(fouriersodafiltratemin2019B1$fourier[2:(length(fouriersodafiltratemin2019B1$fourier)/2)])
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_col() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
fouriersodafiltratemin2019B1 <- fouriersodafiltratemin2019B1[2:(1+length(fouriersodafiltratemin2019B1$fourier)/2),]
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_col() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
plot(fouriersodafiltratemin2019B1$fourier[2:(length(fouriersodafiltratemin2019B1$fourier)/2)])
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_line() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
plot(abs(fft(lowpasssodafiltratemin2019B1fin$level)))
plot(abs(fft(lowpasssodafiltratemin2019B1fin$level))[2:(length(lowpasssodafiltratemin2019B1fin$level)/2)])
#low filter
lowbf <- butter(8, 0.1, type = "low")
y1 <- filtfilt(lowbf, fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1 <- data.frame(time = fouriersodafiltratemin2019B1$freq,
filter = y1,
nofilter = fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1fin <- lowpasssodafiltratemin2019B1 %>%
gather(type, level, filter:nofilter)
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_line() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
plot(abs(fft(lowpasssodafiltratemin2019B1fin$level))[2:(length(lowpasssodafiltratemin2019B1fin$level)/2)])
#low filter
lowbf <- butter(8, 0.1, type = "high")
y1 <- filtfilt(lowbf, fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1 <- data.frame(time = fouriersodafiltratemin2019B1$freq,
filter = y1,
nofilter = fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1fin <- lowpasssodafiltratemin2019B1 %>%
gather(type, level, filter:nofilter)
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_line() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
#low filter
lowbf <- butter(8, 0.1, type = "low")
y1 <- filtfilt(lowbf, fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1 <- data.frame(time = fouriersodafiltratemin2019B1$freq,
filter = y1,
nofilter = fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1fin <- lowpasssodafiltratemin2019B1 %>%
gather(type, level, filter:nofilter)
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_line() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
#low filter
lowbf <- butter(8, 0.2, type = "low")
y1 <- filtfilt(lowbf, fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1 <- data.frame(time = fouriersodafiltratemin2019B1$freq,
filter = y1,
nofilter = fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1fin <- lowpasssodafiltratemin2019B1 %>%
gather(type, level, filter:nofilter)
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_line() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
#low filter
lowbf <- butter(8, 0.3, type = "low")
y1 <- filtfilt(lowbf, fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1 <- data.frame(time = fouriersodafiltratemin2019B1$freq,
filter = y1,
nofilter = fouriersodafiltratemin2019B1$data)
lowpasssodafiltratemin2019B1fin <- lowpasssodafiltratemin2019B1 %>%
gather(type, level, filter:nofilter)
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_line() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
plot(abs(fft(lowpasssodafiltratemin2019B1fin$level))[2:(length(lowpasssodafiltratemin2019B1fin$level)/2)])
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_histogram() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_histogram() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
ggplot(fouriersodafiltratemin2019B1, aes(y=fourier)) + geom_histogram() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
ggplot(fouriersodafiltratemin2019B1, aes(x=fourier)) + geom_histogram() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_col() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
ggplot(lowpasssodafiltratemin2019B1fin, aes(x=time, y=level, color = type, alpha = type)) +
geom_bar() +
scale_alpha_manual(values=c(1,0.5)) +
scale_colour_manual(values=c("red", "blue")) +
xlab("Time (hour)") + ylab("Filtrate Soda Conc. (g/l)") +
ggtitle("Low Pass Filter 2019 30 min Dataset Filtrate Soda Conc.")
ggplot(fouriersodafiltratemin2019B1, aes(x=fourier)) + geom_bar() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
fouriersodafiltratemin2019B1 <- fouriersodafiltratemin2019B1[2:(1+length(fouriersodafiltratemin2019B1$fourier)/2),]
ggplot(fouriersodafiltratemin2019B1, aes(x=fourier)) + geom_bar() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
filtersodafiltratemin2019B1 <- na.omit(filtersodafiltratemin2019B1)
fsodafiltratemin2019B1 <- abs(fft(filtersodafiltratemin2019B1$data))
freqfsodafiltratemin2019B1 <- 1/(filtersodafiltratemin2019B1$time/24)
fouriersodafiltratemin2019B1 <- cbind(fourier=fsodafiltratemin2019B1,
freq=freqfsodafiltratemin2019B1,
filtersodafiltratemin2019B1)
fouriersodafiltratemin2019B1 <- fouriersodafiltratemin2019B1[2:(1+length(fouriersodafiltratemin2019B1$fourier)/2),]
ggplot(fouriersodafiltratemin2019B1, aes(x=fourier)) + geom_bar() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_bar() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_col() +
xlab("Frequency (1/day)") + ylab("Magnitude") +
ggtitle("Fourier Transformation of 1B Soda Filtrate")
ggplot(fouriersodafiltratemin2019B1, aes(x=freq, y=fourier)) + geom_col() + scale_x_log10()
fsodafiltratemin2019B1 <- abs(dft(filtersodafiltratemin2019B1$data))
fsodafiltratemin2019B1 <- abs(fft(filtersodafiltratemin2019B1$data))
plot.frequency.spectrum(fouriersodafiltratemin2019B1$fourier,xlimits=c(0,acq.freq/2))
plot.frequency.spectrum(fouriersodafiltratemin2019B1$fourier,xlimits=c(0,acq.freq/2))
install.packages("spectral")
library(spectral)
plot.frequency.spectrum(fouriersodafiltratemin2019B1$fourier,xlimits=c(0,acq.freq/2))
plot(fouriersodafiltratemin2019B1$fourier[2:(length(fouriersodafiltratemin2019B1$fourier)/2)])
#feed flow
feedflowmin2019B1 <- multiple30min2019B1 %>%
filter( type == 'feedflow')
multiple30min2019B1 <- data30min2019B1 %>%
filter(status == 'On') %>%
gather(type, data, outputspo:oxfiltrate)
data30min2019B1 <- data.frame(time = timestep30min2019,           #day
status = status30min2019B1,
outputspo = outputspo30min2019,  #%
outputsoda = outputsoda30min2019,   #g/l
outputalumina = outputalumina30min2019, #kl/h
throughput = throughput30min2019,   #t/h
feedspo = spo30min2019,      #%
feedsoda = feedsoda30min2019,    #g/l
feeddensity = feeddensity30min2019, #SG
drumspeed = drumspeed30min2019B1,   #RPM
bathlevel = bathlevel30min2019B1,   #%
vacuum = vacuum30min2019B1,         #kPa
feedflow = feedflow30min2019B1,     #kl/h
flocflow = flocflow30min2019B1,     #kl/h
cakewash = cakewash30min2019B1,     #kl/h
clothwash = clothwash30min2019B1,   #kl/h
sodafiltrate = sodafilt30min2019B1, #g/l
oxfiltrate = oxfilt30min2019B1)     #g/l
multiple30min2019B1 <- data30min2019B1 %>%
filter(status == 'On') %>%
gather(type, data, outputspo:oxfiltrate)
View(data30min2019B1)
#-------------------------------------------------------------------------------------------
#extract 1B data from 30min observation
status30min2019B1 <- seedwash30min2019$PO1BFOLXBDI
drumspeed30min2019B1 <- seedwash30min2019$PO1BFDrumSTPV
bathlevel30min2019B1 <- seedwash30min2019$PO1BFBathLCPV
vacuum30min2019B1 <- seedwash30min2019$PO1BVacPCPV
feedflow30min2019B1 <- seedwash30min2019$PO1BFRSFFCPV
flocflow30min2019B1 <- seedwash30min2019$PO1FlocFTPV...148
cakewash30min2019B1 <- seedwash30min2019$PO1BFCaSFTPV
clothwash30min2019B1 <- seedwash30min2019$PO1BFCoSFTPV
sodafilt30min2019B1 <- seedwash30min2019$PO1BFiltATPV
oxfilt30min2019B1 <- seedwash30min2019$PO1AN.Ox...160
data30min2019B1 <- data.frame(time = timestep30min2019,           #day
status = status30min2019B1,
outputspo = outputspo30min2019,  #%
outputsoda = outputsoda30min2019,   #g/l
outputalumina = outputalumina30min2019, #kl/h
throughput = throughput30min2019,   #t/h
feedspo = spo30min2019,      #%
feedsoda = feedsoda30min2019,    #g/l
feeddensity = feeddensity30min2019, #SG
drumspeed = drumspeed30min2019B1,   #RPM
bathlevel = bathlevel30min2019B1,   #%
vacuum = vacuum30min2019B1,         #kPa
feedflow = feedflow30min2019B1,     #kl/h
flocflow = flocflow30min2019B1,     #kl/h
cakewash = cakewash30min2019B1,     #kl/h
clothwash = clothwash30min2019B1,   #kl/h
sodafiltrate = sodafilt30min2019B1, #g/l
oxfiltrate = oxfilt30min2019B1)     #g/l
multiple30min2019B1 <- data30min2019B1 %>%
filter(status == 'On') %>%
gather(type, data, outputspo:oxfiltrate)
oxfilt30min2019B1 <- seedwash30min2019$PO1AN.Ox...160
#---------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------
#extract feed data from 30mins observation (2019)
outputspo30min2019 <- seedwash30min2019$PONthTkAN.Ox
outputsoda30min2019 <- seedwash30min2019$POSOFATPV.S
outputalumina30min2019 <- seedwash30min2019$TotalFlow
throughput30min2019 <- seedwash30min2019$POFeedMQPV
spo30min2019 <- seedwash30min2019$POFeedAN.Ox
feedsoda30min2019 <- seedwash30min2019$POFeedAN.C
feeddensity30min2019 <- seedwash30min2019$POFeedDTPV
timestep30min2019 <- seq(616, 0, by = -0.5)
data30min2019B1 <- data.frame(time = timestep30min2019,           #day
status = status30min2019B1,
outputspo = outputspo30min2019,  #%
outputsoda = outputsoda30min2019,   #g/l
outputalumina = outputalumina30min2019, #kl/h
throughput = throughput30min2019,   #t/h
feedspo = spo30min2019,      #%
feedsoda = feedsoda30min2019,    #g/l
feeddensity = feeddensity30min2019, #SG
drumspeed = drumspeed30min2019B1,   #RPM
bathlevel = bathlevel30min2019B1,   #%
vacuum = vacuum30min2019B1,         #kPa
feedflow = feedflow30min2019B1,     #kl/h
flocflow = flocflow30min2019B1,     #kl/h
cakewash = cakewash30min2019B1,     #kl/h
clothwash = clothwash30min2019B1,   #kl/h
sodafiltrate = sodafilt30min2019B1, #g/l
oxfiltrate = oxfilt30min2019B1)     #g/l
multiple30min2019B1 <- data30min2019B1 %>%
filter(status == 'On') %>%
gather(type, data, outputspo:oxfiltrate)
multiple30min2019B1 <- data30min2019B1 %>%
filter(status == 'On')
View(multiple30min2019B1)
multiple30min2019B1 <- data30min2019B1 %>%
filter(status == 'On') %>%
gather(type, data, outputspo:oxfiltrate)
#vacuum pressure
vacuummin2019B1 <- multiple30min2019B1 %>%
filter( type == 'vacuum')
library(tidyverse)
library(readxl)
library(ggplot2)
library(tidyr)
library(dplyr)
#read seedwash 30 min data from excel
seedwash30min2016<-read_excel('Seedwash Data for UQ- 30min_2015_2019.xlsx', sheet="2015", skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation", "Argument is not a string or cell reference"))
seedwash30min2017<-read_excel('Seedwash Data for UQ- 30min - Data Only - Set 2_March15.xlsx', skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation"))
seedwash30min2018<-read_excel('Seedwash Data for UQ- 30min - Data Only_March14.xlsx', skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation"))
seedwash30min2019<-read_excel('Seedwash Data for UQ- 30min_2015_2019.xlsx', sheet="2019", skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation", "Argument is not a string or cell reference"))
#read seedwash 20 sec data from excel
seedwash20sec2017<-read_excel('Seedwash Data for UQ- 20Sec - Data Only - Set 2_March15.xlsx', skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation"))
seedwash20sec2018<-read_excel('Seedwash Data for UQ- 20Sec - Data Only_March14.xlsx', skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation"))
seedwash20sec2019<-read_excel('Seedwash Data for UQ- 20Sec_2019.xlsx', skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation"))
#read seedwash 1 day data from excel
seedwashdaily<-read_excel('SeedwashData_1day_2016_2019.xlsx', skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation"))
#---------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------
#extract feed data from 30mins observation (2019)
outputspo30min2019 <- seedwash30min2019$PONthTkAN.Ox
outputsoda30min2019 <- seedwash30min2019$POSOFATPV.S
outputalumina30min2019 <- seedwash30min2019$TotalFlow
#read seedwash 30 min data from excel
seedwash30min2016<-read_excel('Seedwash Data for UQ- 30min_2015_2019.xlsx', sheet="2015", skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation", "Argument is not a string or cell reference"))
seedwash30min2017<-read_excel('Seedwash Data for UQ- 30min - Data Only - Set 2_March15.xlsx', skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation"))
seedwash30min2018<-read_excel('Seedwash Data for UQ- 30min - Data Only_March14.xlsx', skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation"))
seedwash30min2019<-read_excel('Seedwash Data for UQ- 30min_2015_2019.xlsx', sheet="2019", skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation", "Argument is not a string or cell reference"))
#read seedwash 20 sec data from excel
seedwash20sec2017<-read_excel('Seedwash Data for UQ- 20Sec - Data Only - Set 2_March15.xlsx', skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation"))
seedwash20sec2018<-read_excel('Seedwash Data for UQ- 20Sec - Data Only_March14.xlsx', skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation"))
seedwash20sec2019<-read_excel('Seedwash Data for UQ- 20Sec_2019.xlsx', skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation"))
#read seedwash 1 day data from excel
seedwashdaily<-read_excel('SeedwashData_1day_2016_2019.xlsx', skip=6, na=c(""," ", "#N/A", "[-11059] No Good Data For Calculation"))
#---------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------
#extract feed data from 30mins observation (2019)
outputspo30min2019 <- seedwash30min2019$PONthTkAN.Ox
outputsoda30min2019 <- seedwash30min2019$POSOFATPV.S
outputalumina30min2019 <- seedwash30min2019$TotalFlow
throughput30min2019 <- seedwash30min2019$POFeedMQPV
spo30min2019 <- seedwash30min2019$POFeedAN.Ox
feedsoda30min2019 <- seedwash30min2019$POFeedAN.C
feeddensity30min2019 <- seedwash30min2019$POFeedDTPV
timestep30min2019 <- seq(616, 0, by = -0.5)
counterspo2019 <- 0
counterfeedsoda2019 <- 0
counteroutputspo2019 <- 0
modspo30min2019 <- length(spo30min2019)
modfeedsoda30min2019 <- length(feedsoda30min2019)
modoutputspo30min2019 <- length(outputspo30min2019)
data30min2019 <- data.frame(time = timestep30min2019,           #day
outputspo = outputspo30min2019,  #%
outputsoda = outputsoda30min2019,   #g/l
outputalumina = outputalumina30min2019, #kl/h
throughput = throughput30min2019,   #t/h
feedspo = spo30min2019,          #%
feedsoda = feedsoda30min2019,    #g/l
feeddensity = feeddensity30min2019) #SG
multiple30min2019 <- data30min2019 %>%
gather(type, data, outputspo:feeddensity)
#-------------------------------------------------------------------------------------------
#extract 1B data from 30min observation
status30min2019B1 <- seedwash30min2019$PO1BFOLXBDI
drumspeed30min2019B1 <- seedwash30min2019$PO1BFDrumSTPV
bathlevel30min2019B1 <- seedwash30min2019$PO1BFBathLCPV
vacuum30min2019B1 <- seedwash30min2019$PO1BVacPCPV
feedflow30min2019B1 <- seedwash30min2019$PO1BFRSFFCPV
flocflow30min2019B1 <- seedwash30min2019$PO1FlocFTPV...148
cakewash30min2019B1 <- seedwash30min2019$PO1BFCaSFTPV
clothwash30min2019B1 <- seedwash30min2019$PO1BFCoSFTPV
sodafilt30min2019B1 <- seedwash30min2019$PO1BFiltATPV
oxfilt30min2019B1 <- seedwash30min2019$PO1AN.Ox...160
data30min2019B1 <- data.frame(time = timestep30min2019,           #day
status = status30min2019B1,
outputspo = outputspo30min2019,  #%
outputsoda = outputsoda30min2019,   #g/l
outputalumina = outputalumina30min2019, #kl/h
throughput = throughput30min2019,   #t/h
feedspo = spo30min2019,      #%
feedsoda = feedsoda30min2019,    #g/l
feeddensity = feeddensity30min2019, #SG
drumspeed = drumspeed30min2019B1,   #RPM
bathlevel = bathlevel30min2019B1,   #%
vacuum = vacuum30min2019B1,         #kPa
feedflow = feedflow30min2019B1,     #kl/h
flocflow = flocflow30min2019B1,     #kl/h
cakewash = cakewash30min2019B1,     #kl/h
clothwash = clothwash30min2019B1,   #kl/h
sodafiltrate = sodafilt30min2019B1, #g/l
oxfiltrate = oxfilt30min2019B1)     #g/l
multiple30min2019B1 <- data30min2019B1 %>%
filter(status == 'On') %>%
gather(type, data, outputspo:oxfiltrate)
View(data30min2019B1)
multiple30min2019B1 <- data30min2019B1 %>%
filter(status == 'On') %>%
gather(type, data, outputspo:oxfiltrate)
